version: '3.8'

services:
  # Streamlit UI Service (Production)
  fetii-ui:
    build:
      context: .
      target: streamlit-ui
    ports:
      - "8501:8501"
    env_file:
      - .env.production
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
    volumes:
      - database-data:/app/database
      - embeddings-data:/app/embeddings
      - logs-data:/app/logs
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      - fetii-api
    networks:
      - fetii-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # FastAPI Backend Service (Production)
  fetii-api:
    build:
      context: .
      target: fastapi-backend
    ports:
      - "8000:8000"
    env_file:
      - .env.production
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      - HOST=0.0.0.0
      - PORT=8000
      - RELOAD=false
      - LOG_LEVEL=info
      - ENVIRONMENT=production
    volumes:
      - database-data:/app/database
      - embeddings-data:/app/embeddings
      - logs-data:/app/logs
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - fetii-network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - fetii-ui
      - fetii-api
    restart: always
    networks:
      - fetii-network
    profiles:
      - nginx

networks:
  fetii-network:
    driver: bridge

volumes:
  database-data:
    driver: local
  embeddings-data:
    driver: local
  logs-data:
    driver: local
